("radix_sort" radix_sort merge_merge_merge_TCC1 0 (merge_merge_merge_TCC1-1 nil 3780354145 ("" (subtype-tcc) nil nil) nil nil))("radix_sort" radix_sort lex_is_total_preorder 0 (lex_is_total_preorder-1 nil 3780347985 ("" (typepred "<<") (("" (typepred "<=") (("" (expand "total_preorder?") (("" (expand "preorder?") (("" (expand "reflexive?") (("" (expand "transitive?") (("" (expand "dichotomous?") (("" (flatten) (("" (expand "lex") (("" (split) (("1" (skeep) (("1" (inst? -1) (("1" (inst? -4) (("1" (assert) nil nil)) nil)) nil)) nil) ("2" (skeep) (("2" (inst-cp -4 "x" "y" "z") (("2" (inst-cp -8 "x" "y" "z") (("2" (prop) (("1" (inst -9 "y" "z" "x") (("1" (assert) nil nil)) nil) ("2" (inst -9 "y" "z" "x") (("2" (assert) nil nil)) nil) ("3" (inst -11 "y" "z" "x") (("3" (assert) nil nil)) nil) ("4" (inst -11 "z" "x" "y") (("4" (assert) nil nil)) nil)) nil)) nil)) nil)) nil) ("3" (skeep) (("3" (inst? -6) (("3" (inst? -3) (("3" (prop) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((<= formal-const-decl "(total_preorder?[T])" radix_sort nil) (preorder? const-decl "bool" orders nil) (transitive? const-decl "bool" relations nil) (lex const-decl "bool" radix_sort nil) (dichotomous? const-decl "bool" orders nil) (reflexive? const-decl "bool" relations nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (T formal-type-decl nil radix_sort nil) (PRED type-eq-decl nil defined_types nil) (total_preorder? const-decl "bool" total_preorder nil) (<< formal-const-decl "(total_preorder?[T])" radix_sort nil)) shostak))